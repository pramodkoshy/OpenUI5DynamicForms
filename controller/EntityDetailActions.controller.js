sap.ui.define(["sap/ui/core/mvc/ControllerExtension","sap/m/Dialog","sap/m/Button","sap/m/Text","sap/m/MessageToast","sap/ui/core/IconPool"],function(e,t,o,s,r,i){"use strict";return e.extend("com.supabase.easyui5.controller.EntityDetailActions",{onSavePress:function(){console.log("Save button pressed in extensions");const e=this.getModel("viewModel");const t=e.getProperty("/tableId");const o=e.getProperty("/entityId");e.setProperty("/busy",true);const s=JSON.parse(JSON.stringify(e.getProperty("/entity")));console.log("Full Entity Data:",JSON.stringify(s,null,2));this.getTableMetadata(t).then(r=>{this.getView().getController()._currentMetadata=r;if(this.validateForm&&typeof this.validateForm==="function"){if(!this.validateForm()){this._showErrorDialog("Validation Error","Please correct the errors in the form");e.setProperty("/busy",false);return}}else{if(!this.validateForm(r,s)){this._showErrorDialog("Validation Error","Please correct the errors in the form");e.setProperty("/busy",false);return}}const i=r.primaryKey;const n={};r.columns.forEach(e=>{if(e.editable===false&&e.name!==i){return}n[e.name]=s[e.name]});console.log("Prepared Update Data:",JSON.stringify(n,null,2));if("updated_at"in s){n["updated_at"]=(new Date).toISOString()}this._showConfirmationDialog("Save Changes","Are you sure you want to save these changes?",()=>{this.getSupabaseClient().from(t).update(n).eq(i,o).then(({data:s,error:r})=>{e.setProperty("/busy",false);if(r){console.error("Update error:",r);this._showErrorDialog("Update Error","Error updating entity: "+r.message);return}e.setProperty("/editMode",false);this._showSuccessDialog("Success","Entity updated successfully");this._loadEntity(t,o)}).catch(t=>{console.error("Error in Supabase query:",t);this._showErrorDialog("Update Error","Error updating entity: "+t.message);e.setProperty("/busy",false)})},()=>{e.setProperty("/busy",false)})}).catch(t=>{console.error("Error getting table metadata:",t);this._showErrorDialog("Metadata Error","Error getting table metadata: "+t.message);e.setProperty("/busy",false)})},onCancelPress:function(){console.log("Cancel button pressed in extensions");const e=this.getModel("viewModel");const t=e.getProperty("/tableId");const o=e.getProperty("/entityId");this._showConfirmationDialog("Cancel Editing","Are you sure you want to discard your changes?",()=>{e.setProperty("/editMode",false);this._loadEntity(t,o)},null)},onEditPress:function(){console.log("Edit button pressed in extensions");const e=this.getModel("viewModel");this.getView().getController()._formFields={};e.setProperty("/editMode",true);const t=e.getProperty("/entity");e.setProperty("/originalEntity",JSON.parse(JSON.stringify(t)))},onDeletePress:function(){const e=this.getModel("viewModel");const t=e.getProperty("/tableId");const o=e.getProperty("/entityId");const s=e.getProperty("/tableName");this._showConfirmationDialog("Delete Confirmation","Are you sure you want to delete this "+s+"?",()=>{this._deleteEntity(t,o)},null)},_deleteEntity:function(e,t){const o=this.getModel("viewModel");o.setProperty("/busy",true);this.getTableMetadata(e).then(s=>{const r=s.primaryKey;this.getSupabaseClient().from(e).delete().eq(r,t).then(({error:t})=>{o.setProperty("/busy",false);if(t){this._showErrorDialog("Delete Error","Error deleting entity: "+t.message);return}const s=o.getProperty("/tableName");this._showSuccessDialog("Success",s+" deleted successfully",()=>{this.getRouter().navTo("entityList",{table:e})})}).catch(e=>{console.error("Error in Supabase query:",e);this._showErrorDialog("Delete Error","Error deleting entity: "+e.message);o.setProperty("/busy",false)})}).catch(e=>{console.error("Error getting table metadata:",e);this._showErrorDialog("Metadata Error","Error loading metadata: "+e.message);o.setProperty("/busy",false)})},_showConfirmationDialog:function(e,r,n,a){if(this._oConfirmDialog){this._oConfirmDialog.destroy()}this._oConfirmDialog=new t({title:e,type:"Message",state:"Warning",icon:i.getIconURI("question-mark"),content:new s({text:r}),beginButton:new o({text:"Yes",press:function(){this._oConfirmDialog.close();if(n){n()}}.bind(this)}),endButton:new o({text:"No",press:function(){this._oConfirmDialog.close();if(a){a()}}.bind(this)}),styleClass:this.getOwnerComponent().getContentDensityClass(),verticalScrolling:false});this._oConfirmDialog.open()},_showSuccessDialog:function(e,r,n){if(this._oSuccessDialog){this._oSuccessDialog.destroy()}this._oSuccessDialog=new t({title:e,type:"Message",state:"Success",icon:i.getIconURI("accept"),content:new s({text:r}),beginButton:new o({text:"OK",press:function(){this._oSuccessDialog.close();if(n){n()}}.bind(this)}),styleClass:this.getOwnerComponent().getContentDensityClass(),verticalScrolling:false});this._oSuccessDialog.open()},_showErrorDialog:function(e,r,n){if(this._oErrorDialog){this._oErrorDialog.destroy()}this._oErrorDialog=new t({title:e,type:"Message",state:"Error",icon:i.getIconURI("error"),content:new s({text:r}),beginButton:new o({text:"OK",press:function(){this._oErrorDialog.close();if(n){n()}}.bind(this)}),styleClass:this.getOwnerComponent().getContentDensityClass(),verticalScrolling:false});this._oErrorDialog.open()},showSuccessMessage:function(e){this._showSuccessDialog("Success",e)},showErrorMessage:function(e,t){let o=e;if(t){o+=": "+(t.message||JSON.stringify(t))}this._showErrorDialog("Error",o)}})});
//# sourceMappingURL=EntityDetailActions.controller.js.map