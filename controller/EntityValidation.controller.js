sap.ui.define(["sap/ui/core/mvc/ControllerExtension"],function(e){"use strict";return e.extend("com.supabase.easyui5.controller.EntityValidation",{validateForm:function(e,t){const s={};let a=true;const o=[];this.getView().$().find(".sapMInputBase, .sapMCheckBox").each(function(){const e=this.id;const t=sap.ui.getCore().byId(e);if(t){o.push(t)}});console.log("Found input controls:",o.length);o.forEach(e=>{if(e.setValueState){e.setValueState("None");if(e.setValueStateText){e.setValueStateText("")}}});e.columns.forEach(i=>{if(i.editable===false||i.name===e.primaryKey||i.name==="created_at"||i.name==="updated_at"){return}const n=i.name;const l=t[n];let r=null;for(let e=0;e<o.length;e++){const t=o[e].getId();if(t.endsWith(n+"Input")||t.indexOf(n+"Input")!==-1){r=o[e];break}}if(!r){console.log("Control not found for field:",n)}else{console.log("Found control for field:",n,r.getId())}if(i.required&&(l===undefined||l===null||l==="")){a=false;s[n]="This field is required";if(r&&r.setValueState){r.setValueState("Error");if(r.setValueStateText){r.setValueStateText("This field is required")}}console.log("Required field validation failed:",n)}else if(l!==undefined&&l!==null&&l!==""){let e=true;let t="";switch(i.type){case"number":if(isNaN(parseFloat(l))||!isFinite(l)){e=false;t="Please enter a valid number"}break;case"date":const s=new Date(l);if(isNaN(s.getTime())){e=false;t="Please enter a valid date"}break;case"email":const a=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(!a.test(l)){e=false;t="Please enter a valid email address"}break;case"url":const o=/^(http|https):\/\/[^ "]+$/;if(!o.test(l)){e=false;t="Please enter a valid URL (starting with http:// or https://)"}break}if(!e){a=false;s[n]=t;if(r&&r.setValueState){r.setValueState("Error");if(r.setValueStateText){r.setValueStateText(t)}}console.log("Type validation failed:",n,t)}}});const i=this.getModel("viewModel");if(i){i.setProperty("/validationErrors",s)}console.log("Validation result:",a?"Valid":"Invalid",s);return a},resetFormErrorStates:function(){console.log("Resetting error states on all form fields");const e=[];this.getView().$().find(".sapMInputBase").each(function(){const t=this.id;const s=sap.ui.getCore().byId(t);if(s){e.push(s)}});this.getView().$().find(".sapMCb").each(function(){const t=this.id;const s=sap.ui.getCore().byId(t);if(s){e.push(s)}});this.getView().$().find(".sapMComboBox").each(function(){const t=this.id;const s=sap.ui.getCore().byId(t);if(s){e.push(s)}});console.log("Found",e.length,"controls to reset");e.forEach(e=>{if(e.setValueState){console.log("Resetting value state for",e.getId());e.setValueState("None");if(e.setValueStateText){e.setValueStateText("")}}});const t=this.getModel("viewModel");if(t){t.setProperty("/validationErrors",{})}console.log("Form error states reset complete")}})});
//# sourceMappingURL=EntityValidation.controller.js.map