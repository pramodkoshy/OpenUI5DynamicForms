sap.ui.define(["sap/ui/base/Object","sap/ui/model/json/JSONModel"],function(t,e){"use strict";return t.extend("com.supabase.easyui5.service.EnhancedDataService",{constructor:function(e,a){t.call(this);this._oSupabaseClient=e;this._oMetadataProvider=a;this._mMetadataCache={};this._mRelationCache={};this._mEntityCache={};this._iCacheDuration=5*60*1e3},setCacheDuration:function(t){this._iCacheDuration=t},getMetadata:function(t){const e=this._mMetadataCache[t];if(e&&Date.now()-e.timestamp<this._iCacheDuration){return Promise.resolve(e.data)}return this._oMetadataProvider.getEnhancedTableMetadata(t).then(e=>{this._mMetadataCache[t]={data:e,timestamp:Date.now()};return e})},getRelationOptions:function(t,e,a){const i=`${t}_${e}_${a}`;const n=this._mRelationCache[i];if(n&&Date.now()-n.timestamp<this._iCacheDuration){return Promise.resolve(n.data)}return this._oSupabaseClient.from(t).select("*").then(({data:t,error:n})=>{if(n){return Promise.reject(n)}const r=(t||[]).map(t=>({key:t[e],text:t[a]||t[e]}));this._mRelationCache[i]={data:r,timestamp:Date.now()};return r})},getEntityById:function(t,e){const a=`${t}_${e}`;const i=this._mEntityCache[a];if(i&&Date.now()-i.timestamp<this._iCacheDuration){return Promise.resolve(i.data)}return this.getMetadata(t).then(a=>this._oMetadataProvider.buildPrimaryKeyQuery(this._oSupabaseClient,t,e,a)).then(t=>t.single()).then(({data:t,error:e})=>{if(e){return Promise.reject(e)}if(!t){return Promise.reject(new Error("Entity not found"))}this._mEntityCache[a]={data:t,timestamp:Date.now()};return t})},listEntities:function(t,e){const a=e?JSON.stringify(e):"";const i=`${t}_list_${a}`;const n=this._mEntityCache[i];if(n&&Date.now()-n.timestamp<this._iCacheDuration){return Promise.resolve(n.data)}let r=this._oSupabaseClient.from(t).select("*");if(e){Object.keys(e).forEach(t=>{const a=e[t];if(a!==undefined&&a!==null){r=r.eq(t,a)}})}return r.then(({data:t,error:e})=>{if(e){return Promise.reject(e)}this._mEntityCache[i]={data:t||[],timestamp:Date.now()};return t||[]})},createEntity:function(t,e){return this._oSupabaseClient.from(t).insert(e).select().then(({data:e,error:a})=>{if(a){return Promise.reject(a)}this._invalidateListCache(t);return e&&e.length>0?e[0]:null})},updateEntity:function(t,e,a){return this.getMetadata(t).then(i=>{const n=this._oMetadataProvider.buildPrimaryKeyQuery(this._oSupabaseClient,t,e,i);return n.update(a).select()}).then(({data:a,error:i})=>{if(i){return Promise.reject(i)}const n=`${t}_${e}`;delete this._mEntityCache[n];this._invalidateListCache(t);return a&&a.length>0?a[0]:null})},deleteEntity:function(t,e){return this.getMetadata(t).then(a=>{const i=this._oMetadataProvider.buildPrimaryKeyQuery(this._oSupabaseClient,t,e,a);return i.delete()}).then(({error:a})=>{if(a){return Promise.reject(a)}const i=`${t}_${e}`;delete this._mEntityCache[i];this._invalidateListCache(t);return true})},_invalidateListCache:function(t){Object.keys(this._mEntityCache).forEach(e=>{if(e.startsWith(`${t}_list_`)){delete this._mEntityCache[e]}})},clearCaches:function(){this._mMetadataCache={};this._mRelationCache={};this._mEntityCache={}}})});
//# sourceMappingURL=EnhancedDataService.js.map